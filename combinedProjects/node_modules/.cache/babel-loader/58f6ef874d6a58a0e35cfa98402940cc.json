{"ast":null,"code":"import _slicedToArray from \"/Users/tylerkrueger/Documents/COMS319/test/g68/combinedProjects/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tylerkrueger/Documents/COMS319/test/g68/combinedProjects/src/components/Tetris.js\";\nimport React, { useState } from 'react';\nimport { createStage, checkCollision } from '../gameHelpers';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\nimport { useInterval } from '../hooks/userInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/userGameStatus';\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        dropTime = _useState2[0],\n        setDropTime = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        gameOver = _useState4[0],\n        setGameOver = _useState4[1];\n\n  const _usePlayer = usePlayer(),\n        _usePlayer2 = _slicedToArray(_usePlayer, 4),\n        player = _usePlayer2[0],\n        updatePlayerPos = _usePlayer2[1],\n        resetPlayer = _usePlayer2[2],\n        playerRotate = _usePlayer2[3];\n\n  const _useStage = useStage(player, resetPlayer),\n        _useStage2 = _slicedToArray(_useStage, 3),\n        stage = _useStage2[0],\n        setStage = _useStage2[1],\n        rowsCleared = _useStage2[2];\n\n  const _useGameStatus = useGameStatus(rowsCleared),\n        _useGameStatus2 = _slicedToArray(_useGameStatus, 6),\n        score = _useGameStatus2[0],\n        setScore = _useGameStatus2[1],\n        rows = _useGameStatus2[2],\n        setRows = _useGameStatus2[3],\n        level = _useGameStatus2[4],\n        setLevel = _useGameStatus2[5];\n\n  console.log('re-render');\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, {\n      x: dir,\n      y: 0\n    })) {\n      updatePlayerPos({\n        x: dir,\n        y: 0\n      });\n    }\n  };\n\n  const startGame = () => {\n    //reset stage\n    setStage(createStage());\n    setDropTime(1000 / (level + 1) + 200);\n    resetPlayer();\n    setScore(0);\n    setLevel(0);\n    setRows(0);\n    setGameOver(false);\n  };\n\n  const drop = () => {\n    //increment level when player has cleared 5 rows\n    if (rows > (level + 1) * 5) {\n      setLevel(prev => prev + 1);\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, {\n      x: 0,\n      y: 1\n    })) {\n      updatePlayerPos({\n        x: 0,\n        y: 1,\n        collided: false\n      });\n    } else {\n      if (player.pos.y < 1) {\n        console.log(\"Game Over\");\n        setGameOver(true);\n        setDropTime(null);\n      }\n\n      updatePlayerPos({\n        x: 0,\n        y: 0,\n        collided: true\n      });\n    }\n  };\n\n  const keyUp = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  };\n\n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  };\n\n  const move = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        event.preventDefault();\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        event.preventDefault();\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        event.preventDefault();\n        dropPlayer();\n      } else if (keyCode === 38) {\n        event.preventDefault();\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n  return React.createElement(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    onKeyUp: keyUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(StyledTetris, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Stage, {\n    stage: stage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, gameOver ? React.createElement(Display, {\n    gameOver: gameOver,\n    text: \"Game Over\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Display, {\n    text: `Score: ${score}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: `Rows: ${rows}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: `Level: ${level}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(StartButton, {\n    callback: startGame,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }))));\n};\n\nexport default Tetris;","map":{"version":3,"sources":["/Users/tylerkrueger/Documents/COMS319/test/g68/combinedProjects/src/components/Tetris.js"],"names":["React","useState","createStage","checkCollision","StyledTetrisWrapper","StyledTetris","useInterval","usePlayer","useStage","useGameStatus","Stage","Display","StartButton","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","updatePlayerPos","resetPlayer","playerRotate","stage","setStage","rowsCleared","score","setScore","rows","setRows","level","setLevel","console","log","movePlayer","dir","x","y","startGame","drop","prev","collided","pos","keyUp","keyCode","dropPlayer","move","event","preventDefault","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { createStage, checkCollision } from '../gameHelpers';\n\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\nimport { useInterval } from '../hooks/userInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/userGameStatus';\n\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n\n    console.log('re-render');\n\n    const movePlayer = dir => {\n        if(!checkCollision(player, stage, { x: dir, y: 0})) {\n            updatePlayerPos({ x: dir, y: 0});\n        }\n    }\n\n    const startGame = () => {\n        //reset stage\n        setStage(createStage());\n        setDropTime(1000 / (level+1) + 200);\n        resetPlayer();\n        setScore(0);\n        setLevel(0);\n        setRows(0);\n        setGameOver(false);\n    }\n\n    const drop = () => {\n\n        //increment level when player has cleared 5 rows\n        if(rows > (level+1)*5){\n            setLevel(prev => prev + 1);\n            setDropTime(1000 / (level+1) + 200);\n        }\n\n        if(!checkCollision(player, stage, {x: 0, y: 1})) {\n            updatePlayerPos({ x: 0, y: 1, collided: false })\n        } else {\n            if(player.pos.y < 1 ){\n                console.log(\"Game Over\");\n                setGameOver(true);\n                setDropTime(null);\n            }\n            updatePlayerPos({ x: 0, y: 0, collided: true});\n\n        }\n    }\n\n    const keyUp = ({keyCode}) => {\n        if (!gameOver){\n            if(keyCode === 40) {\n                setDropTime(1000 / (level+1) + 200);\n            }\n        }\n    }\n\n    const dropPlayer = () => {\n        setDropTime(null);\n        drop();\n    }\n\n    const move = ({ keyCode }) => {\n        if(!gameOver) {\n            if(keyCode === 37) {\n                event.preventDefault();\n                movePlayer(-1);\n            } else if (keyCode === 39) {\n                event.preventDefault();\n                movePlayer(1);\n            } else if(keyCode === 40) {\n                event.preventDefault();\n                dropPlayer();\n            } else if (keyCode === 38) {\n                event.preventDefault();\n                playerRotate(stage, 1);\n            }\n        }\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime);\n\n    return (\n        <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp}>\n            <StyledTetris>\n            <Stage stage={stage} />\n            <aside>\n                {gameOver ? (\n                    <Display gameOver={gameOver} text=\"Game Over\" />\n                    ) : (\n                    <div>\n                        <Display text={`Score: ${score}`} />\n                        <Display text={`Rows: ${rows}`} />\n                        <Display text={`Level: ${level}`} />\n                    </div>\n                    )}\n                <StartButton callback={startGame} />\n            </aside>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n    );\n};\n\nexport default Tetris;"]},"metadata":{},"sourceType":"module"}