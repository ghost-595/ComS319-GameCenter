{"ast":null,"code":"export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\nexport const createStage = () => Array.from(Array(STAGE_HEIGHT), () => new Array(STAGE_WIDTH).fill([0, 'clear']));\nexport const checkCollision = (player, stage, {\n  x: moveX,\n  y: moveY\n}) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      if (player.tetromino[y][x] !== 0) {\n        if ( //check if move is inside height\n        !stage[y + player.pos.y + moveY] || //check if move is inside width\n        !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] || //check that where its moving isnt clear\n        stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear') {\n          return true;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/home/jon/Documents/g68/combinedProjects/src/gameHelpers.js"],"names":["STAGE_WIDTH","STAGE_HEIGHT","createStage","Array","from","fill","checkCollision","player","stage","x","moveX","y","moveY","tetromino","length","pos"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,EAApB;AACP,OAAO,MAAMC,YAAY,GAAG,EAArB;AAEP,OAAO,MAAMC,WAAW,GAAG,MACvBC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACF,YAAD,CAAhB,EAAgC,MAC5B,IAAIE,KAAJ,CAAUH,WAAV,EAAuBK,IAAvB,CAA4B,CAAC,CAAD,EAAI,OAAJ,CAA5B,CADJ,CADG;AAMP,OAAO,MAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgB;AAACC,EAAAA,CAAC,EAAEC,KAAJ;AAAWC,EAAAA,CAAC,EAAEC;AAAd,CAAhB,KAA0C;AACpE,OAAI,IAAID,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,MAAM,CAACM,SAAP,CAAiBC,MAApC,EAA4CH,CAAC,IAAI,CAAjD,EAAoD;AAChD,SAAI,IAAIF,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,MAAM,CAACM,SAAP,CAAiBF,CAAjB,EAAoBG,MAAvC,EAA+CL,CAAC,IAAI,CAApD,EAAuD;AACnD,UAAGF,MAAM,CAACM,SAAP,CAAiBF,CAAjB,EAAoBF,CAApB,MAA2B,CAA9B,EAAiC;AAC7B,aACI;AACA,SAACD,KAAK,CAACG,CAAC,GAAGJ,MAAM,CAACQ,GAAP,CAAWJ,CAAf,GAAkBC,KAAnB,CAAN,IACA;AACA,SAACJ,KAAK,CAACG,CAAC,GAAGJ,MAAM,CAACQ,GAAP,CAAWJ,CAAf,GAAkBC,KAAnB,CAAL,CAA+BH,CAAC,GAAGF,MAAM,CAACQ,GAAP,CAAWN,CAAf,GAAmBC,KAAlD,CAFD,IAGA;AACAF,QAAAA,KAAK,CAACG,CAAC,GAAGJ,MAAM,CAACQ,GAAP,CAAWJ,CAAf,GAAkBC,KAAnB,CAAL,CAA+BH,CAAC,GAAGF,MAAM,CAACQ,GAAP,CAAWN,CAAf,GAAmBC,KAAlD,EAAyD,CAAzD,MACA,OAPJ,EAQC;AACG,iBAAO,IAAP;AACH;AACJ;AACJ;AACJ;AACJ,CAlBM","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () => \n    Array.from(Array(STAGE_HEIGHT), () =>\n        new Array(STAGE_WIDTH).fill([0, 'clear'])\n    )\n\n\nexport const checkCollision = (player, stage, {x: moveX, y: moveY }) => {\n    for(let y = 0; y < player.tetromino.length; y += 1) {\n        for(let x = 0; x < player.tetromino[y].length; x += 1) {\n            if(player.tetromino[y][x] !== 0) {\n                if(\n                    //check if move is inside height\n                    !stage[y + player.pos.y +moveY] ||\n                    //check if move is inside width\n                    !stage[y + player.pos.y +moveY][x + player.pos.x + moveX] ||\n                    //check that where its moving isnt clear\n                    stage[y + player.pos.y +moveY][x + player.pos.x + moveX][1] !==\n                    'clear'\n                ){\n                    return true;\n                }\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}